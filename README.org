* A geometric partitioning method for distributed tomographic reconstruction
Scripts to generate the results in the tables of https://doi.org/10.1016/j.parco.2018.12.007.
** Running the code
1. Clone repository
  #+BEGIN_SRC bash
  git clone https://github.com/jwbuurlage/grcb-experiments.git
  cd grcb-experiments
  #+END_SRC
2. Build examples
  #+BEGIN_SRC bash
  mkdir build
  cd build
  cmake ..
  #+END_SRC
3. Generate Table 2: Communication Volumes, e.g. for 64 processors:
  #+BEGIN_SRC bash
  mkdir ../data/partitionings/
  ./table2 --in ../data/geometries/* --out  ../data/partitionings/ -p 64 -e 0.05 --output
  #+END_SRC
4. Generate Table 3: Cube partitioning volumes
  #+BEGIN_SRC bash
  ./table3 --in ../data/geometries/*
  #+END_SRC
5. Generate Table 4: Message counts, e.g. for 64 processors.
  #+BEGIN_SRC bash
  ./table4 --in ../data/geometries/* --part ../data/partitionings/ -p 64 --trivial --bisected
  #+END_SRC
  /Note:/ This requires a 'fat node', since it depends on a large amount of RAM.
   The results for the article were measured with an MPI cluster. The code uses
   Bulk, and here we use its thread backend instead of the MPI backend that was used
   for the results in the paper.
6. Run generation of the sparse matrix representations for explicit partitioning
   with Mondriaan.
  #+BEGIN_SRC bash
  ./table1 --out ../data/
  #+END_SRC
7. Install and run Mondriaan
  #+BEGIN_SRC bash
    wget http://www.staff.science.uu.nl/~bisse101/Mondriaan/mondriaan_v4.2.tar.gz
    tar xzf mondriaan_v4.2.tar.gz 
    cd mondriaan-v4.2-d273ee5382bd085bbedf9e543ddae38d2b136dfd/
    make
    ./tools/Mondriaan ../data/cone_beam_64.mtx 16 0.05 -SplitStrategy=onedimrow
    ./tools/MondriaanStats ../data/cone_beam_64.mtx-P16
    # ...
  #+END_SRC
** Other results from the article
- The results from Figure 7 and Figure 8 are screenshots taken with the partitioning
  visualization features of [[https://www.github.com/cicwi/RECAST3D][RECAST3D]]. 
- The benchmarking results of Figure 9 and Figure 10 are run using [[https://www.github.com/jwbuurlage/Tomos][Tomos]] on top
  of the [[https://jwbuurlage.github.io/Bulk][MPI backend of Bulk]], see the [[https://github.com/jwbuurlage/Tomos/blob/815ecd1be6d5a63e0d941418bf78bbf0361040a5/tools/run_measurement.cpp][source file for the program that was used]].
  
